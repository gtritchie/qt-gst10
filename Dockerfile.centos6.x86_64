FROM centos:centos6

# install qt download prereqs
RUN yum install -y wget

# download qt (do this early for caching)
RUN mkdir /qt \
    && cd /qt \
    && wget --no-check-certificate https://download.qt.io/archive/qt/5.4/5.4.1/single/qt-everywhere-opensource-src-5.4.1.tar.gz \
    && tar xzvf qt-everywhere-opensource-src-5.4.1.tar.gz

# install build tools
RUN yum install -y \
    bison \ 
    chrpath \
    flex \
    flex \ 
    gcc-c++ \
    gperf \
    gstreamer \
    gstreamer-devel \
    gtk2-devel \
    intltool \
    libicu-devel \
    libX11-devel \
    libxcb \
    libxcb-devel \
    libxkbcommon-devel \ 
    libXext \
    libXext-devel \
    libxslt-devel \
    libXrender \
    libXrender-devel \
    make \
    xcb-util \
    xcb-util-devel \
    xcb-util-image \
    xcb-util-image-devel \
    xcb-util-keysyms \
    xcb-util-keysyms-devel \
    xcb-util-wm \
    xcb-util-wm-devel \
    xkbcomp \
    ruby \
    xz

# install libxkbcommon; have to build from source, there's no CentOS package
# which supplies this. must be done before configuring Qt since qt needs libxkb
RUN cd /tmp \
    && wget http://xkbcommon.org/download/libxkbcommon-0.5.0.tar.xz \
    && tar xvf libxkbcommon-0.5.0.tar.xz \
    && cd libxkbcommon-0.5.0 \
    && ./configure \
    && make -j4 \
    && make install

# install keyboard config files
RUN cd /tmp \
    && wget http://www.x.org/releases/individual/data/xkeyboard-config/xkeyboard-config-2.19.tar.bz2 \
    && tar xvf xkeyboard-config-2.19.tar.bz2 \
    && cd xkeyboard-config-2.19 \
    && ./configure \
    && make \
    && make install

# perform configuration
RUN mkdir -p /qt/Qt5.4.1/5.4/gcc_64 \
    && cd /qt/qt-everywhere-opensource-src-5.4.1 \
    && ./configure -prefix /qt/Qt5.4.1/5.4/gcc_64 -opensource -confirm-license -no-reduce-relocations -nomake tests -nomake examples -verbose -qt-xcb -qt-libpng -qt-pcre

# compile (this takes a long time)
RUN cd /qt/qt-everywhere-opensource-src-5.4.1 \
    && make -j4  \
    && make install

# these system libraries are bundled with the Qt distribution, but not 
# built from sources, so copy them into our own "distribution" folder
RUN cp /usr/lib64/libicudata.so.42.1 \
       /usr/lib64/libicui18n.so.42.1 \
       /usr/lib64/libicuio.so.42.1   \
       /usr/lib64/libicule.so.42.1   \
       /usr/lib64/libiculx.so.42.1   \
       /usr/lib64/libicutu.so.42.1   \
       /usr/lib64/libicuuc.so.42.1 /qt/Qt5.4.1/5.4/gcc_64/lib

# softlink paths
RUN cd /qt/Qt5.4.1/5.4/gcc_64/lib \
    && ln -s libicudata.so.42.1  libicudata.so.42  \
    && ln -s libicui18n.so.42.1  libicui18n.so.42 \
    && ln -s libicuio.so.42.1    libicuio.so.42 \
    && ln -s libicule.so.42.1    libicule.so.42 \
    && ln -s libiculx.so.42.1    libiculx.so.42 \
    && ln -s libicutu.so.42.1    libicutu.so.42 \
    && ln -s libicuuc.so.42.1    libicuuc.so.42

# rewrite RPATH for libraries. by default the RPATH is set to the resolved
# -prefix passed to 'configure', but we need the libraries to be able to find
# each other regardless of where they're installed
RUN cd /qt/Qt5.4.1/5.4/gcc_64/lib \
    && chrpath -k -r '$ORIGIN' *.so*; exit 0 

# rewrite RPATH for binaries
RUN cd /qt/Qt5.4.1/5.4/gcc_64/bin \
    && chrpath -k -r '$ORIGIN/../lib' *; exit 0 

# rewrite RPATH for image format plugins
RUN cd /qt/Qt5.4.2/5.4/gcc_64/plugins/imageformats \
    && chrpath -k -r '$ORIGIN/../../lib' *.so; exit 0 

# produce tarball 
RUN cd /qt \
    && tar czvf QtSDK-5.4.2-x86_64.tar.gz Qt5.4.2

